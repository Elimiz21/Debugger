import { useState, useEffect } from "react";
import { supabase } from "@/lib/supabaseClient";
import { useRouter } from "next/router";

export default function Home() {
  const router = useRouter();
  const [isSignUp, setIsSignUp] = useState(false);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [errorMsg, setErrorMsg] = useState("");

  useEffect(() => {
    supabase.auth.getSession().then(({ data: { session } }) => {
      if (session) router.replace("/projects");
    });
  }, [router]);

  const handleSignIn = async () => {
    setErrorMsg("");
    const { error } = await supabase.auth.signInWithPassword({ email, password });
    if (error) setErrorMsg(error.message);
    else router.replace("/projects");
  };

  const handleSignUp = async () => {
    setErrorMsg("");
    if (password !== confirmPassword) {
      setErrorMsg("Passwords do not match");
      return;
    }
    const { data, error } = await supabase.auth.signUp({ email, password });
    if (error) setErrorMsg(error.message);
    else if (data.session) router.replace("/projects");
    else setErrorMsg("Check your email to confirm account.");
  };

  const handleOAuthLogin = async (provider: "google" | "github") => {
    const { error } = await supabase.auth.signInWithOAuth({ provider });
    if (error) setErrorMsg(error.message);
  };

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    isSignUp ? await handleSignUp() : await handleSignIn();
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100 p-4">
      <div className="w-full max-w-md bg-white rounded shadow p-6">
        <h1 className="text-2xl font-bold mb-4 text-center">
          {isSignUp ? "Sign Up" : "Sign In"}
        </h1>
        {errorMsg && <div className="text-red-600 mb-3 text-center">{errorMsg}</div>}
        <form onSubmit={onSubmit}>
          <div className="mb-4">
            <label className="block text-sm font-medium mb-1">Email</label>
            <input
              type="email"
              className="w-full border rounded px-3 py-2"
              value={email}
              onChange={e => setEmail(e.target.value)}
              required
            />
          </div>
          <div className="mb-4">
            <label className="block text-sm font-medium mb-1">Password</label>
            <input
              type="password"
              className="w-full border rounded px-3 py-2"
              value={password}
              onChange={e => setPassword(e.target.value)}
              required
            />
          </div>
          {isSignUp && (
            <div className="mb-4">
              <label className="block text-sm font-medium mb-1">
                Confirm Password
              </label>
              <input
                type="password"
                className="w-full border rounded px-3 py-2"
                value={confirmPassword}
                onChange={e => setConfirmPassword(e.target.value)}
                required
              />
            </div>
          )}
          <button
            type="submit"
            className="w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700"
          >
            {isSignUp ? "Sign Up" : "Sign In"}
          </button>
        </form>
        <div className="text-center mt-4">
          {isSignUp ? (
            <p>
              Already have an account?{" "}
              <button
                onClick={() => { setIsSignUp(false); setErrorMsg(""); }}
                className="text-blue-600 underline"
              >
                Sign In
              </button>
            </p>
          ) : (
            <p>
              No account?{" "}
              <button
                onClick={() => { setIsSignUp(true); setErrorMsg(""); }}
                className="text-blue-600 underline"
              >
                Sign Up
              </button>
            </p>
          )}
        </div>
        <hr className="my-6" />
        <div className="text-center">
          <p className="mb-2 text-sm text-gray-600">Or sign in with:</p>
          <button
            onClick={() => handleOAuthLogin("google")}
            className="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded mr-2"
          >
            Google
          </button>
          <button
            onClick={() => handleOAuthLogin("github")}
            className="bg-gray-800 hover:bg-gray-900 text-white px-4 py-2 rounded"
          >
            GitHub
          </button>
        </div>
      </div>
    </div>
  );
}
